"""add Cart, Review and Address models

Revision ID: d5ec9ef629f1
Revises: 
Create Date: 2024-11-08 21:48:46.176025

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd5ec9ef629f1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('address')
    op.drop_table('cars')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('address', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('county', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('town', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('zip_code', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('country', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_addresses_user_id_users'), 'users', ['user_id'], ['id'])

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rating', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('comment', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_reviews_user_id_users'), 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_reviews_product_id_products'), 'products', ['product_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_reviews_product_id_products'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_reviews_user_id_users'), type_='foreignkey')
        batch_op.drop_column('product_id')
        batch_op.drop_column('user_id')
        batch_op.drop_column('created_at')
        batch_op.drop_column('comment')
        batch_op.drop_column('rating')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_addresses_user_id_users'), type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('country')
        batch_op.drop_column('zip_code')
        batch_op.drop_column('town')
        batch_op.drop_column('county')
        batch_op.drop_column('address')

    op.create_table('cars',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('total_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='fk_cars_product_id_products'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_cars_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='cars_pkey')
    )
    op.create_table('address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='address_pkey')
    )
    # ### end Alembic commands ###
